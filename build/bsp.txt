; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\build\bsp.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\bsp.d --cpu=Cortex-M4.fp --apcs=interwork -O0 -I.\FreeRTOS\include -I.\inc -I.\startup -I.\driverlib -I.\Application -I.\FreeRTOS\portable -I.\Task -I.\driver -I.\usblib -ID:\Keil\ARM\RV31\INC -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\Inc\TI\TM4C129 -Drvmdk -DPART_TM4C1290NCZAD -DRTOS_FREERTOS -DTARGET_IS_SNOWFLAKE_RA0 -DTM4C1290NCZAD --omf_browse=.\build\bsp.crf startup\bsp.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  bsp_gpio_init PROC
;;;11     
;;;12     void bsp_gpio_init(void)
000000  b510              PUSH     {r4,lr}
;;;13     {
;;;14     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOA);
000002  4878              LDR      r0,|L1.484|
000004  f7fffffe          BL       SysCtlPeripheralEnable
;;;15     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOB);
000008  4876              LDR      r0,|L1.484|
00000a  1c40              ADDS     r0,r0,#1
00000c  f7fffffe          BL       SysCtlPeripheralEnable
;;;16     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOC);
000010  4874              LDR      r0,|L1.484|
000012  1c80              ADDS     r0,r0,#2
000014  f7fffffe          BL       SysCtlPeripheralEnable
;;;17     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOD);
000018  4872              LDR      r0,|L1.484|
00001a  1cc0              ADDS     r0,r0,#3
00001c  f7fffffe          BL       SysCtlPeripheralEnable
;;;18     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOE);
000020  4870              LDR      r0,|L1.484|
000022  1d00              ADDS     r0,r0,#4
000024  f7fffffe          BL       SysCtlPeripheralEnable
;;;19     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOF);
000028  486e              LDR      r0,|L1.484|
00002a  1d40              ADDS     r0,r0,#5
00002c  f7fffffe          BL       SysCtlPeripheralEnable
;;;20     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOG);
000030  486c              LDR      r0,|L1.484|
000032  1d80              ADDS     r0,r0,#6
000034  f7fffffe          BL       SysCtlPeripheralEnable
;;;21     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOH);
000038  486a              LDR      r0,|L1.484|
00003a  1dc0              ADDS     r0,r0,#7
00003c  f7fffffe          BL       SysCtlPeripheralEnable
;;;22     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOJ);
000040  4868              LDR      r0,|L1.484|
000042  3008              ADDS     r0,r0,#8
000044  f7fffffe          BL       SysCtlPeripheralEnable
;;;23     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOK);
000048  4866              LDR      r0,|L1.484|
00004a  3009              ADDS     r0,r0,#9
00004c  f7fffffe          BL       SysCtlPeripheralEnable
;;;24     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOL);
000050  4864              LDR      r0,|L1.484|
000052  300a              ADDS     r0,r0,#0xa
000054  f7fffffe          BL       SysCtlPeripheralEnable
;;;25     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOM);
000058  4862              LDR      r0,|L1.484|
00005a  300b              ADDS     r0,r0,#0xb
00005c  f7fffffe          BL       SysCtlPeripheralEnable
;;;26     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPION);
000060  4860              LDR      r0,|L1.484|
000062  300c              ADDS     r0,r0,#0xc
000064  f7fffffe          BL       SysCtlPeripheralEnable
;;;27     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOP);
000068  485e              LDR      r0,|L1.484|
00006a  300d              ADDS     r0,r0,#0xd
00006c  f7fffffe          BL       SysCtlPeripheralEnable
;;;28     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOQ);
000070  485c              LDR      r0,|L1.484|
000072  300e              ADDS     r0,r0,#0xe
000074  f7fffffe          BL       SysCtlPeripheralEnable
;;;29     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOR);
000078  485a              LDR      r0,|L1.484|
00007a  300f              ADDS     r0,r0,#0xf
00007c  f7fffffe          BL       SysCtlPeripheralEnable
;;;30     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOS);
000080  4858              LDR      r0,|L1.484|
000082  3010              ADDS     r0,r0,#0x10
000084  f7fffffe          BL       SysCtlPeripheralEnable
;;;31     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOT);
000088  4856              LDR      r0,|L1.484|
00008a  3011              ADDS     r0,r0,#0x11
00008c  f7fffffe          BL       SysCtlPeripheralEnable
;;;32     	
;;;33     	GPIO_PORTF_LOCK_R = 0x4C4F434B;
000090  4855              LDR      r0,|L1.488|
000092  4956              LDR      r1,|L1.492|
000094  6008              STR      r0,[r1,#0]
;;;34     	GPIO_PORTD_LOCK_R = 0x4C4F434B;
000096  4956              LDR      r1,|L1.496|
000098  6008              STR      r0,[r1,#0]
;;;35     
;;;36     	GPIO_PORTF_CR_R = 0x1;
00009a  2001              MOVS     r0,#1
00009c  4953              LDR      r1,|L1.492|
00009e  1d09              ADDS     r1,r1,#4
0000a0  6008              STR      r0,[r1,#0]
;;;37     	GPIO_PORTD_CR_R = (1<<7);
0000a2  2080              MOVS     r0,#0x80
0000a4  4952              LDR      r1,|L1.496|
0000a6  1d09              ADDS     r1,r1,#4
0000a8  6008              STR      r0,[r1,#0]
;;;38     	
;;;39     	/*eeprom releated gpio init*/
;;;40       GPIOPinTypeGPIOOutput(EPROM_SDA_PORT, EPROM_SDA_PIN);
0000aa  2108              MOVS     r1,#8
0000ac  4851              LDR      r0,|L1.500|
0000ae  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;41     	GPIOPinTypeGPIOOutput(EPROM_SCL_PORT, EPROM_SCL_PIN);
0000b2  2104              MOVS     r1,#4
0000b4  484f              LDR      r0,|L1.500|
0000b6  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;42     	
;;;43     	
;;;44     	 /*init lcd related gpio*/
;;;45     	GPIOPinTypeGPIOOutput(LCD_RS_PORT, LCD_RS_PIN);
0000ba  2102              MOVS     r1,#2
0000bc  484e              LDR      r0,|L1.504|
0000be  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;46     	GPIOPinTypeGPIOOutput(LCD_RW_PORT, LCD_RW_PIN);
0000c2  2101              MOVS     r1,#1
0000c4  484c              LDR      r0,|L1.504|
0000c6  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;47     	GPIOPinTypeGPIOOutput(LCD_EN_PORT, LCD_EN_PIN);
0000ca  2180              MOVS     r1,#0x80
0000cc  484a              LDR      r0,|L1.504|
0000ce  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;48     	GPIOPinTypeGPIOOutput(LCD_DB4_PORT, LCD_DB4_PIN);
0000d2  2120              MOVS     r1,#0x20
0000d4  4848              LDR      r0,|L1.504|
0000d6  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;49     	GPIOPinTypeGPIOOutput(LCD_DB5_PORT, LCD_DB5_PIN);
0000da  2110              MOVS     r1,#0x10
0000dc  4846              LDR      r0,|L1.504|
0000de  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;50     	GPIOPinTypeGPIOOutput(LCD_DB6_PORT, LCD_DB6_PIN);
0000e2  2120              MOVS     r1,#0x20
0000e4  4845              LDR      r0,|L1.508|
0000e6  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;51       GPIOPinTypeGPIOOutput(LCD_DB7_PORT, LCD_DB7_PIN);
0000ea  2110              MOVS     r1,#0x10
0000ec  4843              LDR      r0,|L1.508|
0000ee  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;52     	GPIOPinTypeGPIOOutput(LCD_PWM_PORT, LCD_PWM_PIN);
0000f2  2102              MOVS     r1,#2
0000f4  4842              LDR      r0,|L1.512|
0000f6  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;53     	
;;;54     	GPIO_PIN_SET(LCD_PWM_PORT, LCD_PWM_PIN, 1);
0000fa  bf00              NOP      
0000fc  2202              MOVS     r2,#2
0000fe  4611              MOV      r1,r2
000100  483f              LDR      r0,|L1.512|
000102  f7fffffe          BL       GPIOPinWrite
000106  bf00              NOP      
;;;55     	
;;;56       	/*power management gpio*/
;;;57     	GPIOPinTypeGPIOOutput(AC_STANDBY_PORT, AC_STANDBY_PIN);
000108  2102              MOVS     r1,#2
00010a  483e              LDR      r0,|L1.516|
00010c  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;58     	GPIOPinTypeGPIOOutput(DC5V_EN_PORT, DC5V_EN_PIN);
000110  2108              MOVS     r1,#8
000112  483c              LDR      r0,|L1.516|
000114  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;59     	GPIOPinTypeGPIOOutput(DC3V_EN_PORT, DC3V_EN_PIN);
000118  2104              MOVS     r1,#4
00011a  483b              LDR      r0,|L1.520|
00011c  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;60     	GPIOPinTypeGPIOOutput(PS_EN_PORT, PS_EN_PIN);
000120  2140              MOVS     r1,#0x40
000122  483a              LDR      r0,|L1.524|
000124  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;61     	//GPIO_PIN_SET(DC3V_EN_PORT, DC3V_EN_PIN, 1);
;;;62     	GPIOPinTypeGPIOOutput(POWER_EN01_PORT, POWER_EN01_PIN);
000128  2180              MOVS     r1,#0x80
00012a  4838              LDR      r0,|L1.524|
00012c  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;63     	GPIOPinTypeGPIOInput(AC_DETECT_PORT, AC_DETECT_PIN);
000130  2104              MOVS     r1,#4
000132  4834              LDR      r0,|L1.516|
000134  f7fffffe          BL       GPIOPinTypeGPIOInput
;;;64     	
;;;65     	
;;;66     	/*usb*/
;;;67     	GPIOPinTypeGPIOOutput(USB_EN_PORT, USB_EN_PIN);
000138  2110              MOVS     r1,#0x10
00013a  4835              LDR      r0,|L1.528|
00013c  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;68     	GPIO_PIN_SET(USB_EN_PORT, USB_EN_PIN, 1);
000140  bf00              NOP      
000142  2210              MOVS     r2,#0x10
000144  4611              MOV      r1,r2
000146  4832              LDR      r0,|L1.528|
000148  f7fffffe          BL       GPIOPinWrite
00014c  bf00              NOP      
;;;69     	GPIOPinTypeGPIOOutput(USB_SELECT_PORT, USB_SELECT_PIN);
00014e  2104              MOVS     r1,#4
000150  4830              LDR      r0,|L1.532|
000152  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;70     	
;;;71     }
000156  bd10              POP      {r4,pc}
;;;72     
                          ENDP

                  s_printf PROC
;;;73     
;;;74     void s_printf(char *fmt, ...)
000158  b40f              PUSH     {r0-r3}
;;;75     {
00015a  b530              PUSH     {r4,r5,lr}
00015c  f5ad7d01          SUB      sp,sp,#0x204
;;;76     	    va_list ap;
;;;77     	    char buf[512] = {0};
000160  f44f7100          MOV      r1,#0x200
000164  4668              MOV      r0,sp
000166  f7fffffe          BL       __aeabi_memclr4
;;;78           size_t len;
;;;79           size_t index = 0;
00016a  2400              MOVS     r4,#0
;;;80     
;;;81           va_start(ap, fmt);
00016c  a885              ADD      r0,sp,#0x214
00016e  9080              STR      r0,[sp,#0x200]
;;;82     	    vsprintf(buf, fmt, ap);
000170  4668              MOV      r0,sp
000172  9a80              LDR      r2,[sp,#0x200]
000174  9984              LDR      r1,[sp,#0x210]
000176  f7fffffe          BL       __c89vsprintf
;;;83           va_end(ap);
00017a  2000              MOVS     r0,#0
00017c  9080              STR      r0,[sp,#0x200]
;;;84     
;;;85           len = strlen(buf);
00017e  4668              MOV      r0,sp
000180  f7fffffe          BL       strlen
000184  4605              MOV      r5,r0
;;;86           while(index < len){
000186  e008              B        |L1.410|
                  |L1.392|
;;;87     				while(UARTCharPutNonBlocking(UART0_BASE, buf[index]) == false);
000188  bf00              NOP      
                  |L1.394|
00018a  f81d1004          LDRB     r1,[sp,r4]
00018e  4822              LDR      r0,|L1.536|
000190  f7fffffe          BL       UARTCharPutNonBlocking
000194  2800              CMP      r0,#0
000196  d0f8              BEQ      |L1.394|
;;;88     				index++;
000198  1c64              ADDS     r4,r4,#1
                  |L1.410|
00019a  42ac              CMP      r4,r5                 ;86
00019c  d3f4              BCC      |L1.392|
;;;89     			}
;;;90     }
00019e  f50d7d01          ADD      sp,sp,#0x204
0001a2  bc30              POP      {r4,r5}
0001a4  f85dfb14          LDR      pc,[sp],#0x14
;;;91     
                          ENDP

                  bsp_delay_us PROC
;;;93     
;;;94     void bsp_delay_us(uint32 time)
0001a8  b510              PUSH     {r4,lr}
;;;95     {
0001aa  4604              MOV      r4,r0
;;;96     	SysCtlDelay(40 * time);
0001ac  eb040184          ADD      r1,r4,r4,LSL #2
0001b0  00c8              LSLS     r0,r1,#3
0001b2  f7fffffe          BL       SysCtlDelay
;;;97     }
0001b6  bd10              POP      {r4,pc}
;;;98     
                          ENDP

                  bsp_delay_ms PROC
;;;99     
;;;100    void bsp_delay_ms(uint32 time)
0001b8  b510              PUSH     {r4,lr}
;;;101    {
0001ba  4604              MOV      r4,r0
;;;102    	 for(;time;time--)
0001bc  e004              B        |L1.456|
                  |L1.446|
;;;103    		 bsp_delay_us(1000);
0001be  f44f707a          MOV      r0,#0x3e8
0001c2  f7fffffe          BL       bsp_delay_us
0001c6  1e64              SUBS     r4,r4,#1              ;102
                  |L1.456|
0001c8  2c00              CMP      r4,#0                 ;102
0001ca  d1f8              BNE      |L1.446|
;;;104    }
0001cc  bd10              POP      {r4,pc}
;;;105    
                          ENDP

                  GPIO_ReadSinglePin PROC
;;;106    
;;;107    uint8 GPIO_ReadSinglePin(uint32 ulPort, uint8 ucPins)
0001ce  4602              MOV      r2,r0
;;;108    {
;;;109    	if ((HWREG(ulPort + (GPIO_O_DATA + (ucPins << 2)))) != 0)
0001d0  2000              MOVS     r0,#0
0001d2  eb000081          ADD      r0,r0,r1,LSL #2
0001d6  5810              LDR      r0,[r2,r0]
0001d8  b108              CBZ      r0,|L1.478|
;;;110    		return 1;
0001da  2001              MOVS     r0,#1
                  |L1.476|
;;;111    	else
;;;112    		return 0;
;;;113    }
0001dc  4770              BX       lr
                  |L1.478|
0001de  2000              MOVS     r0,#0                 ;112
0001e0  e7fc              B        |L1.476|
;;;114    
                          ENDP

0001e2  0000              DCW      0x0000
                  |L1.484|
                          DCD      0xf0000800
                  |L1.488|
                          DCD      0x4c4f434b
                  |L1.492|
                          DCD      0x40025520
                  |L1.496|
                          DCD      0x40007520
                  |L1.500|
                          DCD      0x40005000
                  |L1.504|
                          DCD      0x40007000
                  |L1.508|
                          DCD      0x40024000
                  |L1.512|
                          DCD      0x40025000
                  |L1.516|
                          DCD      0x40061000
                  |L1.520|
                          DCD      0x40063000
                  |L1.524|
                          DCD      0x40006000
                  |L1.528|
                          DCD      0x40066000
                  |L1.532|
                          DCD      0x40065000
                  |L1.536|
                          DCD      0x4000c000
