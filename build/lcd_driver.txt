; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\build\lcd_driver.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\lcd_driver.d --cpu=Cortex-M4.fp --apcs=interwork -O0 -I.\FreeRTOS\include -I.\inc -I.\startup -I.\driverlib -I.\Application -I.\FreeRTOS\portable -I.\Task -I.\driver -ID:\Keil\ARM\RV31\INC -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\Inc\TI\TM4C129 -Drvmdk -DPART_TM4C1290NCZAD -DRTOS_FREERTOS -DTARGET_IS_SNOWFLAKE_RA0 -DTM4C1290NCZAD --omf_browse=.\build\lcd_driver.crf driver\lcd_driver.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  lcd_bus_write PROC
;;;36     
;;;37     static void lcd_bus_write(uint8 cmd, uint8 index)
000000  b5f8              PUSH     {r3-r7,lr}
;;;38     {
000002  4604              MOV      r4,r0
000004  460e              MOV      r6,r1
;;;39     	uint8 temp[4] = {0};
000006  2000              MOVS     r0,#0
000008  9000              STR      r0,[sp,#0]
;;;40       uint8 j; 
;;;41     
;;;42       if(index == 0){
00000a  b90e              CBNZ     r6,|L1.16|
;;;43     		cmd = (cmd >> 4) & 0x0f;
00000c  0924              LSRS     r4,r4,#4
00000e  e001              B        |L1.20|
                  |L1.16|
;;;44     	}else{
;;;45     		cmd &= 0x0f;
000010  f004040f          AND      r4,r4,#0xf
                  |L1.20|
;;;46     	}
;;;47     	
;;;48     	for(j = 0; j < 4; j++){
000014  2500              MOVS     r5,#0
000016  e006              B        |L1.38|
                  |L1.24|
;;;49     		temp[j] = cmd & 0x01;
000018  f0040001          AND      r0,r4,#1
00001c  f80d0005          STRB     r0,[sp,r5]
;;;50     		cmd >>= 1;
000020  1064              ASRS     r4,r4,#1
000022  1c68              ADDS     r0,r5,#1              ;48
000024  b2c5              UXTB     r5,r0                 ;48
                  |L1.38|
000026  2d04              CMP      r5,#4                 ;48
000028  dbf6              BLT      |L1.24|
;;;51     	}
;;;52     	
;;;53     //		GPIO_PIN_SET(LCD_DB7_PORT, LCD_DB7_PIN, temp[3]);
;;;54     //	  GPIO_PIN_SET(LCD_DB6_PORT, LCD_DB6_PIN, temp[2]);
;;;55     //		GPIO_PIN_SET(LCD_DB5_PORT, LCD_DB5_PIN, temp[1]);
;;;56     //		GPIO_PIN_SET(LCD_DB4_PORT, LCD_DB4_PIN, temp[0]);
;;;57     	
;;;58     	
;;;59     	GPIOPinWrite(LCD_DB7_PORT, LCD_DB7_PIN | LCD_DB6_PIN, (temp[3] << 4) | (temp[2] << 5));
00002a  f89d0003          LDRB     r0,[sp,#3]
00002e  0100              LSLS     r0,r0,#4
000030  f89d1002          LDRB     r1,[sp,#2]
000034  ea401041          ORR      r0,r0,r1,LSL #5
000038  b2c2              UXTB     r2,r0
00003a  2130              MOVS     r1,#0x30
00003c  48a7              LDR      r0,|L1.732|
00003e  f7fffffe          BL       GPIOPinWrite
;;;60     	GPIOPinWrite(LCD_DB5_PORT, LCD_DB5_PIN | LCD_DB4_PIN, (temp[1] << 4) | (temp[0] << 5));
000042  f89d0001          LDRB     r0,[sp,#1]
000046  0100              LSLS     r0,r0,#4
000048  f89d1000          LDRB     r1,[sp,#0]
00004c  ea401041          ORR      r0,r0,r1,LSL #5
000050  b2c2              UXTB     r2,r0
000052  2130              MOVS     r1,#0x30
000054  48a2              LDR      r0,|L1.736|
000056  f7fffffe          BL       GPIOPinWrite
;;;61     }
00005a  bdf8              POP      {r3-r7,pc}
;;;62     
                          ENDP

                  lcd_check_busy PROC
;;;63     static int lcd_check_busy(void)
00005c  b570              PUSH     {r4-r6,lr}
;;;64     {
;;;65     	uint32 cnt = 0;
00005e  2600              MOVS     r6,#0
;;;66     	int retval = 0;
000060  2500              MOVS     r5,#0
;;;67     	uint8 val;
;;;68     	
;;;69     	while(1){
000062  e053              B        |L1.268|
                  |L1.100|
;;;70     		LCD_RS(0);
000064  bf00              NOP      
000066  2200              MOVS     r2,#0
000068  2102              MOVS     r1,#2
00006a  489d              LDR      r0,|L1.736|
00006c  f7fffffe          BL       GPIOPinWrite
000070  bf00              NOP      
;;;71     		GPIOPinTypeGPIOInput(LCD_DB7_PORT, LCD_DB7_PIN);
000072  2110              MOVS     r1,#0x10
000074  4899              LDR      r0,|L1.732|
000076  f7fffffe          BL       GPIOPinTypeGPIOInput
;;;72     		LCD_RW(1);
00007a  bf00              NOP      
00007c  2201              MOVS     r2,#1
00007e  4611              MOV      r1,r2
000080  4897              LDR      r0,|L1.736|
000082  f7fffffe          BL       GPIOPinWrite
000086  bf00              NOP      
;;;73     		LCD_EN(1);
000088  bf00              NOP      
00008a  2280              MOVS     r2,#0x80
00008c  4611              MOV      r1,r2
00008e  4894              LDR      r0,|L1.736|
000090  f7fffffe          BL       GPIOPinWrite
000094  bf00              NOP      
;;;74     		LCD_SHORT_DELAY;
000096  2001              MOVS     r0,#1
000098  f7fffffe          BL       bsp_delay_us
;;;75     		val = GPIO_ReadSinglePin(LCD_DB7_PORT, LCD_DB7_PIN);
00009c  2110              MOVS     r1,#0x10
00009e  488f              LDR      r0,|L1.732|
0000a0  f7fffffe          BL       GPIO_ReadSinglePin
0000a4  4604              MOV      r4,r0
;;;76     		LCD_EN(0);
0000a6  bf00              NOP      
0000a8  2200              MOVS     r2,#0
0000aa  2180              MOVS     r1,#0x80
0000ac  488c              LDR      r0,|L1.736|
0000ae  f7fffffe          BL       GPIOPinWrite
0000b2  bf00              NOP      
;;;77     	  LCD_SHORT_DELAY;
0000b4  2001              MOVS     r0,#1
0000b6  f7fffffe          BL       bsp_delay_us
;;;78     		LCD_EN(1);
0000ba  bf00              NOP      
0000bc  2280              MOVS     r2,#0x80
0000be  4611              MOV      r1,r2
0000c0  4887              LDR      r0,|L1.736|
0000c2  f7fffffe          BL       GPIOPinWrite
0000c6  bf00              NOP      
;;;79     		LCD_SHORT_DELAY;
0000c8  2001              MOVS     r0,#1
0000ca  f7fffffe          BL       bsp_delay_us
;;;80     		LCD_EN(0);
0000ce  bf00              NOP      
0000d0  2200              MOVS     r2,#0
0000d2  2180              MOVS     r1,#0x80
0000d4  4882              LDR      r0,|L1.736|
0000d6  f7fffffe          BL       GPIOPinWrite
0000da  bf00              NOP      
;;;81     		LCD_SHORT_DELAY;
0000dc  2001              MOVS     r0,#1
0000de  f7fffffe          BL       bsp_delay_us
;;;82     		GPIOPinTypeGPIOOutput(LCD_DB7_PORT, LCD_DB7_PIN);
0000e2  2110              MOVS     r1,#0x10
0000e4  487d              LDR      r0,|L1.732|
0000e6  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;83     		
;;;84     		if(val == 0){
0000ea  b904              CBNZ     r4,|L1.238|
;;;85     			break;
0000ec  e00f              B        |L1.270|
                  |L1.238|
;;;86     		}else{
;;;87     			if(cnt++ >= LCD_OPERATE_TIMEOUT){
0000ee  4630              MOV      r0,r6
0000f0  1c76              ADDS     r6,r6,#1
0000f2  f2427110          MOV      r1,#0x2710
0000f6  4288              CMP      r0,r1
0000f8  d302              BCC      |L1.256|
;;;88     				retval = -1;
0000fa  f04f35ff          MOV      r5,#0xffffffff
;;;89     				break;
0000fe  e006              B        |L1.270|
                  |L1.256|
;;;90     		  }
;;;91     		  LCD_SHORT_DELAY;
000100  2001              MOVS     r0,#1
000102  f7fffffe          BL       bsp_delay_us
;;;92     			LCD_SHORT_DELAY;
000106  2001              MOVS     r0,#1
000108  f7fffffe          BL       bsp_delay_us
                  |L1.268|
00010c  e7aa              B        |L1.100|
                  |L1.270|
00010e  bf00              NOP                            ;85
;;;93     		}
;;;94     	}
;;;95     	
;;;96     	return retval;
000110  4628              MOV      r0,r5
;;;97     }
000112  bd70              POP      {r4-r6,pc}
;;;98     
                          ENDP

                  lcd_write_cmd PROC
;;;99     int lcd_write_cmd(uint8 cmd)
000114  b570              PUSH     {r4-r6,lr}
;;;100    {
000116  4606              MOV      r6,r0
;;;101    	int retval = 0;
000118  2500              MOVS     r5,#0
;;;102    	uint8 i;
;;;103    	
;;;104    	retval = lcd_check_busy();
00011a  f7fffffe          BL       lcd_check_busy
00011e  4605              MOV      r5,r0
;;;105    	if(retval < 0){
000120  2d00              CMP      r5,#0
000122  da07              BGE      |L1.308|
;;;106    		SYS_TRACE(LCD_DRIVER_DEBUG, ("lcd_write_cmd:lcd_write_cmd timeout\r\n"));
000124  bf00              NOP      
000126  a06f              ADR      r0,|L1.740|
000128  f7fffffe          BL       s_printf
00012c  bf00              NOP      
;;;107    		return -1;
00012e  f04f30ff          MOV      r0,#0xffffffff
                  |L1.306|
;;;108    	}
;;;109    	
;;;110    	for(i = 0; i < 2; i++){
;;;111    		LCD_RS(0);
;;;112    		LCD_RW(0);
;;;113    		LCD_SHORT_DELAY;
;;;114    		LCD_EN(1);
;;;115    		lcd_bus_write(cmd, i);
;;;116    		LCD_SHORT_DELAY;
;;;117    		LCD_EN(0);
;;;118    		LCD_LONG_DELAY;
;;;119    	}
;;;120    	
;;;121    	return retval;
;;;122    }
000132  bd70              POP      {r4-r6,pc}
                  |L1.308|
000134  2400              MOVS     r4,#0                 ;110
000136  e02a              B        |L1.398|
                  |L1.312|
000138  bf00              NOP                            ;111
00013a  2200              MOVS     r2,#0                 ;111
00013c  2102              MOVS     r1,#2                 ;111
00013e  4868              LDR      r0,|L1.736|
000140  f7fffffe          BL       GPIOPinWrite
000144  bf00              NOP                            ;111
000146  bf00              NOP                            ;112
000148  2200              MOVS     r2,#0                 ;112
00014a  2101              MOVS     r1,#1                 ;112
00014c  4864              LDR      r0,|L1.736|
00014e  f7fffffe          BL       GPIOPinWrite
000152  bf00              NOP                            ;112
000154  2001              MOVS     r0,#1                 ;113
000156  f7fffffe          BL       bsp_delay_us
00015a  bf00              NOP                            ;114
00015c  2280              MOVS     r2,#0x80              ;114
00015e  4611              MOV      r1,r2                 ;114
000160  485f              LDR      r0,|L1.736|
000162  f7fffffe          BL       GPIOPinWrite
000166  bf00              NOP                            ;114
000168  4621              MOV      r1,r4                 ;115
00016a  4630              MOV      r0,r6                 ;115
00016c  f7fffffe          BL       lcd_bus_write
000170  2001              MOVS     r0,#1                 ;116
000172  f7fffffe          BL       bsp_delay_us
000176  bf00              NOP                            ;117
000178  2200              MOVS     r2,#0                 ;117
00017a  2180              MOVS     r1,#0x80              ;117
00017c  4858              LDR      r0,|L1.736|
00017e  f7fffffe          BL       GPIOPinWrite
000182  bf00              NOP                            ;117
000184  200a              MOVS     r0,#0xa               ;118
000186  f7fffffe          BL       bsp_delay_us
00018a  1c60              ADDS     r0,r4,#1              ;110
00018c  b2c4              UXTB     r4,r0                 ;110
                  |L1.398|
00018e  2c02              CMP      r4,#2                 ;110
000190  dbd2              BLT      |L1.312|
000192  4628              MOV      r0,r5                 ;121
000194  e7cd              B        |L1.306|
;;;123    
                          ENDP

                  lcd_write_data PROC
;;;124    int lcd_write_data(uint8 data)
000196  b570              PUSH     {r4-r6,lr}
;;;125    {
000198  4606              MOV      r6,r0
;;;126    	int retval = 0;
00019a  2500              MOVS     r5,#0
;;;127    	uint8 i;
;;;128    	
;;;129    	retval = lcd_check_busy();
00019c  f7fffffe          BL       lcd_check_busy
0001a0  4605              MOV      r5,r0
;;;130    	if(retval < 0){
0001a2  2d00              CMP      r5,#0
0001a4  da07              BGE      |L1.438|
;;;131    		SYS_TRACE(LCD_DRIVER_DEBUG, ("lcd_write_data timeout\r\n"));
0001a6  bf00              NOP      
0001a8  a058              ADR      r0,|L1.780|
0001aa  f7fffffe          BL       s_printf
0001ae  bf00              NOP      
;;;132    		return -1;
0001b0  f04f30ff          MOV      r0,#0xffffffff
                  |L1.436|
;;;133    	}
;;;134    	
;;;135    	for(i = 0; i < 2; i++){
;;;136    		LCD_RS(1);
;;;137    		LCD_RW(0);
;;;138    		LCD_SHORT_DELAY;
;;;139    		LCD_EN(1);
;;;140    		//LCD_SHORT_DELAY;
;;;141    		lcd_bus_write(data, i);
;;;142    		LCD_SHORT_DELAY;
;;;143    		LCD_EN(0);
;;;144    		LCD_LONG_DELAY;
;;;145    	}
;;;146    	
;;;147    	return retval;
;;;148    }
0001b4  bd70              POP      {r4-r6,pc}
                  |L1.438|
0001b6  2400              MOVS     r4,#0                 ;135
0001b8  e02a              B        |L1.528|
                  |L1.442|
0001ba  bf00              NOP                            ;136
0001bc  2202              MOVS     r2,#2                 ;136
0001be  4611              MOV      r1,r2                 ;136
0001c0  4847              LDR      r0,|L1.736|
0001c2  f7fffffe          BL       GPIOPinWrite
0001c6  bf00              NOP                            ;136
0001c8  bf00              NOP                            ;137
0001ca  2200              MOVS     r2,#0                 ;137
0001cc  2101              MOVS     r1,#1                 ;137
0001ce  4844              LDR      r0,|L1.736|
0001d0  f7fffffe          BL       GPIOPinWrite
0001d4  bf00              NOP                            ;137
0001d6  2001              MOVS     r0,#1                 ;138
0001d8  f7fffffe          BL       bsp_delay_us
0001dc  bf00              NOP                            ;139
0001de  2280              MOVS     r2,#0x80              ;139
0001e0  4611              MOV      r1,r2                 ;139
0001e2  483f              LDR      r0,|L1.736|
0001e4  f7fffffe          BL       GPIOPinWrite
0001e8  bf00              NOP                            ;139
0001ea  4621              MOV      r1,r4                 ;141
0001ec  4630              MOV      r0,r6                 ;141
0001ee  f7fffffe          BL       lcd_bus_write
0001f2  2001              MOVS     r0,#1                 ;142
0001f4  f7fffffe          BL       bsp_delay_us
0001f8  bf00              NOP                            ;143
0001fa  2200              MOVS     r2,#0                 ;143
0001fc  2180              MOVS     r1,#0x80              ;143
0001fe  4838              LDR      r0,|L1.736|
000200  f7fffffe          BL       GPIOPinWrite
000204  bf00              NOP                            ;143
000206  200a              MOVS     r0,#0xa               ;144
000208  f7fffffe          BL       bsp_delay_us
00020c  1c60              ADDS     r0,r4,#1              ;135
00020e  b2c4              UXTB     r4,r0                 ;135
                  |L1.528|
000210  2c02              CMP      r4,#2                 ;135
000212  dbd2              BLT      |L1.442|
000214  4628              MOV      r0,r5                 ;147
000216  e7cd              B        |L1.436|
;;;149    
                          ENDP

                  display_init_menu PROC
;;;150    void display_init_menu(void)
000218  b510              PUSH     {r4,lr}
;;;151    { 
;;;152    	lcd_write_cmd(0x80);
00021a  2080              MOVS     r0,#0x80
00021c  f7fffffe          BL       lcd_write_cmd
;;;153    	lcd_write_data('A');
000220  2041              MOVS     r0,#0x41
000222  f7fffffe          BL       lcd_write_data
;;;154    	lcd_write_data('B');
000226  2042              MOVS     r0,#0x42
000228  f7fffffe          BL       lcd_write_data
;;;155    	lcd_write_data('C');
00022c  2043              MOVS     r0,#0x43
00022e  f7fffffe          BL       lcd_write_data
;;;156    	lcd_write_data('D');
000232  2044              MOVS     r0,#0x44
000234  f7fffffe          BL       lcd_write_data
;;;157    	lcd_write_data('E');
000238  2045              MOVS     r0,#0x45
00023a  f7fffffe          BL       lcd_write_data
;;;158    	lcd_write_data('F');
00023e  2046              MOVS     r0,#0x46
000240  f7fffffe          BL       lcd_write_data
;;;159    	lcd_write_data('G');
000244  2047              MOVS     r0,#0x47
000246  f7fffffe          BL       lcd_write_data
;;;160    	lcd_write_data('H');
00024a  2048              MOVS     r0,#0x48
00024c  f7fffffe          BL       lcd_write_data
;;;161    	
;;;162    }
000250  bd10              POP      {r4,pc}
;;;163     
                          ENDP

                  lcd_init PROC
;;;164    
;;;165    int lcd_init(void)
000252  b510              PUSH     {r4,lr}
;;;166    {
;;;167    	uint8 i = 0;
000254  2400              MOVS     r4,#0
;;;168    	
;;;169    	LCD_RS(0);
000256  bf00              NOP      
000258  2200              MOVS     r2,#0
00025a  2102              MOVS     r1,#2
00025c  4820              LDR      r0,|L1.736|
00025e  f7fffffe          BL       GPIOPinWrite
000262  bf00              NOP      
;;;170    	LCD_RW(0);
000264  bf00              NOP      
000266  2200              MOVS     r2,#0
000268  2101              MOVS     r1,#1
00026a  481d              LDR      r0,|L1.736|
00026c  f7fffffe          BL       GPIOPinWrite
000270  bf00              NOP      
;;;171    	LCD_EN(0);
000272  bf00              NOP      
000274  2200              MOVS     r2,#0
000276  2180              MOVS     r1,#0x80
000278  4819              LDR      r0,|L1.736|
00027a  f7fffffe          BL       GPIOPinWrite
00027e  bf00              NOP      
;;;172    	
;;;173    	lcd_write_cmd(0x28);
000280  2028              MOVS     r0,#0x28
000282  f7fffffe          BL       lcd_write_cmd
;;;174    	
;;;175    	/*clear dispaly*/
;;;176    	lcd_write_cmd(0x01);
000286  2001              MOVS     r0,#1
000288  f7fffffe          BL       lcd_write_cmd
;;;177    	bsp_delay_ms(4);
00028c  2004              MOVS     r0,#4
00028e  f7fffffe          BL       bsp_delay_ms
;;;178    	
;;;179    	/*set mode*/
;;;180    	lcd_write_cmd(0x06);
000292  2006              MOVS     r0,#6
000294  f7fffffe          BL       lcd_write_cmd
;;;181    	
;;;182    	/*display on*/
;;;183    	lcd_write_cmd(0x0c);
000298  200c              MOVS     r0,#0xc
00029a  f7fffffe          BL       lcd_write_cmd
;;;184    	
;;;185    	/*clear dispaly*/
;;;186    	lcd_write_cmd(0x01);
00029e  2001              MOVS     r0,#1
0002a0  f7fffffe          BL       lcd_write_cmd
;;;187    	bsp_delay_ms(4);
0002a4  2004              MOVS     r0,#4
0002a6  f7fffffe          BL       bsp_delay_ms
;;;188    	
;;;189    
;;;190    	/*load special character to CGRAM*/
;;;191    	lcd_write_cmd(0x40);
0002aa  2040              MOVS     r0,#0x40
0002ac  f7fffffe          BL       lcd_write_cmd
;;;192    	for(i = 0; i < 64; i++){
0002b0  bf00              NOP      
0002b2  e005              B        |L1.704|
                  |L1.692|
;;;193    		lcd_write_data(CGRAM[i]);
0002b4  491c              LDR      r1,|L1.808|
0002b6  5d08              LDRB     r0,[r1,r4]
0002b8  f7fffffe          BL       lcd_write_data
0002bc  1c60              ADDS     r0,r4,#1              ;192
0002be  b2c4              UXTB     r4,r0                 ;192
                  |L1.704|
0002c0  2c40              CMP      r4,#0x40              ;192
0002c2  dbf7              BLT      |L1.692|
;;;194    	}
;;;195    
;;;196    	
;;;197    	display_init_menu();
0002c4  f7fffffe          BL       display_init_menu
;;;198    	/*display on, need do this again here ? ?*/
;;;199    	lcd_write_cmd(0x0c);
0002c8  200c              MOVS     r0,#0xc
0002ca  f7fffffe          BL       lcd_write_cmd
;;;200    	
;;;201    	SYS_TRACE(LCD_DRIVER_DEBUG, ("lcd init done\r\n"));
0002ce  bf00              NOP      
0002d0  a016              ADR      r0,|L1.812|
0002d2  f7fffffe          BL       s_printf
0002d6  bf00              NOP      
;;;202    	return 0;
0002d8  2000              MOVS     r0,#0
;;;203    }
0002da  bd10              POP      {r4,pc}
;;;204    
                          ENDP

                  |L1.732|
                          DCD      0x40024000
                  |L1.736|
                          DCD      0x40007000
                  |L1.740|
0002e4  6c63645f          DCB      "lcd_write_cmd:lcd_write_cmd timeout\r\n",0
0002e8  77726974
0002ec  655f636d
0002f0  643a6c63
0002f4  645f7772
0002f8  6974655f
0002fc  636d6420
000300  74696d65
000304  6f75740d
000308  0a00    
00030a  00                DCB      0
00030b  00                DCB      0
                  |L1.780|
00030c  6c63645f          DCB      "lcd_write_data timeout\r\n",0
000310  77726974
000314  655f6461
000318  74612074
00031c  696d656f
000320  75740d0a
000324  00      
000325  00                DCB      0
000326  00                DCB      0
000327  00                DCB      0
                  |L1.808|
                          DCD      CGRAM
                  |L1.812|
00032c  6c636420          DCB      "lcd init done\r\n",0
000330  696e6974
000334  20646f6e
000338  650d0a00

                          AREA ||.data||, DATA, ALIGN=0

                  CGRAM
000000  0103070f          DCB      0x01,0x03,0x07,0x0f
000004  07030100          DCB      0x07,0x03,0x01,0x00
000008  10101010          DCB      0x10,0x10,0x10,0x10
00000c  10101010          DCB      0x10,0x10,0x10,0x10
000010  18181818          DCB      0x18,0x18,0x18,0x18
000014  18181818          DCB      0x18,0x18,0x18,0x18
000018  1c1c1c1c          DCB      0x1c,0x1c,0x1c,0x1c
00001c  1c1c1c1c          DCB      0x1c,0x1c,0x1c,0x1c
000020  0000040e          DCB      0x00,0x00,0x04,0x0e
000024  1f0e0400          DCB      0x1f,0x0e,0x04,0x00
000028  1f1f1f1f          DCB      0x1f,0x1f,0x1f,0x1f
00002c  1f1f1f1f          DCB      0x1f,0x1f,0x1f,0x1f
000030  10181c1e          DCB      0x10,0x18,0x1c,0x1e
000034  1c181000          DCB      0x1c,0x18,0x10,0x00
000038  00000000          DCB      0x00,0x00,0x00,0x00
00003c  040e1f1f          DCB      0x04,0x0e,0x1f,0x1f
