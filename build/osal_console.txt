; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\build\osal_console.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\osal_console.d --cpu=Cortex-M4.fp --apcs=interwork -O0 -I.\FreeRTOS\include -I.\inc -I.\startup -I.\driverlib -I.\Application -I.\FreeRTOS\portable -I.\Task -I.\driver -I.\usblib -ID:\Keil\ARM\RV31\INC -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\Inc\TI\TM4C129 -Drvmdk -DPART_TM4C1290NCZAD -DRTOS_FREERTOS -DTARGET_IS_SNOWFLAKE_RA0 -DTM4C1290NCZAD --omf_browse=.\build\osal_console.crf Application\OSAL_Console.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  ||fn1|| PROC
;;;26     
;;;27     int fn1(struct cmd_tbl_s *cmdtp, int argc, char * const argv[])
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;28     {
000004  4681              MOV      r9,r0
000006  468a              MOV      r10,r1
000008  4693              MOV      r11,r2
;;;29     	   unsigned long i;
;;;30     	   uint8 index=1;
00000a  2601              MOVS     r6,#1
;;;31     	   cmd_tbl_t* pCmd;
;;;32     	   unsigned long base = (unsigned long)Load$$INIT_SECTION$$Base;
00000c  4f65              LDR      r7,|L1.420|
;;;33          unsigned long len = (unsigned long)Load$$INIT_SECTION$$Length;
00000e  f8df8198          LDR      r8,|L1.424|
;;;34     	
;;;35     	   SYS_TRACE(SYS_DEBUG_ON, ("\r\n-------------CMD List Table------------------\r\n"));
000012  bf00              NOP      
000014  a065              ADR      r0,|L1.428|
000016  f7fffffe          BL       s_printf
00001a  bf00              NOP      
;;;36     	   for(i=0;i<len;index++)
00001c  2400              MOVS     r4,#0
00001e  e00d              B        |L1.60|
                  |L1.32|
;;;37          {
;;;38              pCmd = (cmd_tbl_t*)(base+i);
000020  193d              ADDS     r5,r7,r4
;;;39              if(pCmd->usage){
000022  68e8              LDR      r0,[r5,#0xc]
000024  b138              CBZ      r0,|L1.54|
;;;40                 SYS_TRACE(SYS_DEBUG_ON, ("%d.%s          -%s\r\n", index,pCmd->name,pCmd->usage));
000026  bf00              NOP      
000028  4631              MOV      r1,r6
00002a  a06d              ADR      r0,|L1.480|
00002c  68eb              LDR      r3,[r5,#0xc]
00002e  682a              LDR      r2,[r5,#0]
000030  f7fffffe          BL       s_printf
000034  bf00              NOP      
                  |L1.54|
;;;41     				 }
;;;42     
;;;43              i+=sizeof(cmd_tbl_t);
000036  3410              ADDS     r4,r4,#0x10
000038  1c70              ADDS     r0,r6,#1              ;36
00003a  b2c6              UXTB     r6,r0                 ;36
                  |L1.60|
00003c  4544              CMP      r4,r8                 ;36
00003e  d3ef              BCC      |L1.32|
;;;44          }
;;;45     	   SYS_TRACE(SYS_DEBUG_ON, ("\r\n----------------------------------------------\r\n"));
000040  bf00              NOP      
000042  a06d              ADR      r0,|L1.504|
000044  f7fffffe          BL       s_printf
000048  bf00              NOP      
;;;46     		 
;;;47     	return 0;
00004a  2000              MOVS     r0,#0
;;;48     }
00004c  e8bd9ff0          POP      {r4-r12,pc}
;;;49     
                          ENDP

                  ||fn2|| PROC
;;;50     int fn2(struct cmd_tbl_s *cmdtp, int argc, char * const argv[])
000050  4603              MOV      r3,r0
;;;51     {
;;;52     	   
;;;53     	
;;;54     	return 0;
000052  2000              MOVS     r0,#0
;;;55     }
000054  4770              BX       lr
;;;56     
                          ENDP

                  ||fn3|| PROC
;;;57     int fn3(struct cmd_tbl_s *cmdtp, int argc, char * const argv[])
000056  4603              MOV      r3,r0
;;;58     {
;;;59     	   if(argc == 3){
;;;60     			 
;;;61     		 }
;;;62     		 
;;;63     		 return 0;
000058  2000              MOVS     r0,#0
;;;64     }
00005a  4770              BX       lr
;;;65     
                          ENDP

                  ||fn4|| PROC
;;;66     int fn4(struct cmd_tbl_s *cmdtp, int argc, char * const argv[])
00005c  4603              MOV      r3,r0
;;;67     {
;;;68     	   if(argc == 2){
;;;69     			 //SYS_TRACE("\r\n%s\r\n", osal_env_get(argv[1]));
;;;70     		 }
;;;71     		 return 0;
00005e  2000              MOVS     r0,#0
;;;72     }
000060  4770              BX       lr
;;;73     
                          ENDP

                  ||fn5|| PROC
;;;74     int fn5(struct cmd_tbl_s *cmdtp, int argc, char * const argv[])
000062  4603              MOV      r3,r0
;;;75     {
;;;76     	  
;;;77     	
;;;78     	return 0;
000064  2000              MOVS     r0,#0
;;;79     }
000066  4770              BX       lr
;;;80     
                          ENDP

                  Init_all PROC
;;;92     
;;;93     void Init_all(unsigned long addr,unsigned long len)
000068  e92d41f0          PUSH     {r4-r8,lr}
;;;94     {
00006c  4606              MOV      r6,r0
00006e  460f              MOV      r7,r1
;;;95          cmd_tbl_t* pCmd;
;;;96          unsigned long i;
;;;97          
;;;98          for(i=0;i<len;)
000070  2500              MOVS     r5,#0
000072  e00b              B        |L1.140|
                  |L1.116|
;;;99          {
;;;100             pCmd = (cmd_tbl_t*)(addr+i);
000074  1974              ADDS     r4,r6,r5
;;;101             if(strcmp(pCmd->name, "help") == 0){
000076  a16d              ADR      r1,|L1.556|
000078  6820              LDR      r0,[r4,#0]
00007a  f7fffffe          BL       strcmp
00007e  b920              CBNZ     r0,|L1.138|
;;;102                  pCmd->cmd(NULL, 0, NULL);
000080  2200              MOVS     r2,#0
000082  4611              MOV      r1,r2
000084  4610              MOV      r0,r2
000086  68a3              LDR      r3,[r4,#8]
000088  4798              BLX      r3
                  |L1.138|
;;;103    				 }
;;;104    
;;;105             i+=sizeof(cmd_tbl_t);
00008a  3510              ADDS     r5,r5,#0x10
                  |L1.140|
00008c  42bd              CMP      r5,r7                 ;98
00008e  d3f1              BCC      |L1.116|
;;;106         }
;;;107    }
000090  e8bd81f0          POP      {r4-r8,pc}
;;;108    
                          ENDP

                  find_cmd PROC
;;;109    static cmd_tbl_t *find_cmd (const char *cmd)
000094  e92d41f0          PUSH     {r4-r8,lr}
;;;110    {
000098  4606              MOV      r6,r0
;;;111      unsigned long base = (unsigned long)Load$$INIT_SECTION$$Base;
00009a  4f42              LDR      r7,|L1.420|
;;;112      unsigned long len = (unsigned long)Load$$INIT_SECTION$$Length;  
00009c  f8df8108          LDR      r8,|L1.424|
;;;113    	
;;;114    	cmd_tbl_t* pCmd;
;;;115    	unsigned long i;
;;;116    	
;;;117    	for(i=0;i<len;){
0000a0  2500              MOVS     r5,#0
0000a2  e009              B        |L1.184|
                  |L1.164|
;;;118    		pCmd = (cmd_tbl_t*)(base+i);
0000a4  197c              ADDS     r4,r7,r5
;;;119    		if(strcmp(pCmd->name, cmd) == 0){
0000a6  4631              MOV      r1,r6
0000a8  6820              LDR      r0,[r4,#0]
0000aa  f7fffffe          BL       strcmp
0000ae  b910              CBNZ     r0,|L1.182|
;;;120    			return pCmd;
0000b0  4620              MOV      r0,r4
                  |L1.178|
;;;121    		}
;;;122    		
;;;123    		i+=sizeof(cmd_tbl_t);
;;;124    	}
;;;125    	
;;;126    	return NULL;
;;;127    }
0000b2  e8bd81f0          POP      {r4-r8,pc}
                  |L1.182|
0000b6  3510              ADDS     r5,r5,#0x10           ;123
                  |L1.184|
0000b8  4545              CMP      r5,r8                 ;117
0000ba  d3f3              BCC      |L1.164|
0000bc  2000              MOVS     r0,#0                 ;126
0000be  e7f8              B        |L1.178|
;;;128    
                          ENDP

                  cmd_process PROC
;;;129    
;;;130    static cmd_err_t cmd_process(int argc, char * const argv[])
0000c0  e92d41f0          PUSH     {r4-r8,lr}
;;;131    {
0000c4  4606              MOV      r6,r0
0000c6  460c              MOV      r4,r1
;;;132    	 cmd_err_t result = CMD_NO_ERROR;
0000c8  2700              MOVS     r7,#0
;;;133       cmd_tbl_t* pCmd;
;;;134    	
;;;135    	 /*first look up command in command table*/
;;;136    	 pCmd = find_cmd(argv[0]);
0000ca  6820              LDR      r0,[r4,#0]
0000cc  f7fffffe          BL       find_cmd
0000d0  4605              MOV      r5,r0
;;;137    	 if(!pCmd){
0000d2  b945              CBNZ     r5,|L1.230|
;;;138    		 SYS_TRACE(SYS_DEBUG_ON, ("cmd_process:\r\nUnknown cmd '%s'\r\n", argv[0]));
0000d4  bf00              NOP      
0000d6  a057              ADR      r0,|L1.564|
0000d8  6821              LDR      r1,[r4,#0]
0000da  f7fffffe          BL       s_printf
0000de  bf00              NOP      
;;;139    		 return CMD_UNKNOWN;
0000e0  2001              MOVS     r0,#1
                  |L1.226|
;;;140    	 }
;;;141    	 
;;;142    	 /* found - check max args */
;;;143    	 if(pCmd->maxargs < argc){
;;;144    		 SYS_TRACE(SYS_DEBUG_ON, ("cmd_process:Too many argv\r\n"));
;;;145    		 return CMD_PARAMETER_ERROR;
;;;146    	 }
;;;147    	 
;;;148    	 pCmd->cmd(pCmd, argc, argv);
;;;149    	 
;;;150    	 return result;
;;;151    }
0000e2  e8bd81f0          POP      {r4-r8,pc}
                  |L1.230|
0000e6  6868              LDR      r0,[r5,#4]            ;143
0000e8  42b0              CMP      r0,r6                 ;143
0000ea  da06              BGE      |L1.250|
0000ec  bf00              NOP                            ;144
0000ee  a05a              ADR      r0,|L1.600|
0000f0  f7fffffe          BL       s_printf
0000f4  bf00              NOP                            ;144
0000f6  2002              MOVS     r0,#2                 ;145
0000f8  e7f3              B        |L1.226|
                  |L1.250|
0000fa  4622              MOV      r2,r4                 ;148
0000fc  4631              MOV      r1,r6                 ;148
0000fe  4628              MOV      r0,r5                 ;148
000100  68ab              LDR      r3,[r5,#8]            ;148
000102  4798              BLX      r3                    ;148
000104  4638              MOV      r0,r7                 ;150
000106  e7ec              B        |L1.226|
;;;152    
                          ENDP

                  parse_line PROC
;;;153    
;;;154    static int parse_line(char *line, char *argv[])
000108  b570              PUSH     {r4-r6,lr}
;;;155    {
00010a  4604              MOV      r4,r0
00010c  460e              MOV      r6,r1
;;;156    	 int nargs = 0;
00010e  2500              MOVS     r5,#0
;;;157    	
;;;158    	 while(nargs < CONFIG_SYS_MAXARGS){
000110  e026              B        |L1.352|
                  |L1.274|
;;;159    		  /* skip any white space */
;;;160    		  while(is_blank(*line)){
000112  e000              B        |L1.278|
                  |L1.276|
;;;161    				line++;
000114  1c64              ADDS     r4,r4,#1
                  |L1.278|
000116  7820              LDRB     r0,[r4,#0]            ;160
000118  2820              CMP      r0,#0x20              ;160
00011a  d0fb              BEQ      |L1.276|
00011c  7820              LDRB     r0,[r4,#0]            ;160
00011e  2809              CMP      r0,#9                 ;160
000120  d0f8              BEQ      |L1.276|
;;;162    			}
;;;163    			/*end of the line, no more args*/
;;;164    			if(*line == '\0'){
000122  7820              LDRB     r0,[r4,#0]
000124  b920              CBNZ     r0,|L1.304|
;;;165    				argv[nargs] = NULL;
000126  2000              MOVS     r0,#0
000128  f8460025          STR      r0,[r6,r5,LSL #2]
;;;166    				return nargs;
00012c  4628              MOV      r0,r5
                  |L1.302|
;;;167    			}
;;;168    			
;;;169    			argv[nargs++] = line;	/* begin of argument string	*/
;;;170    			
;;;171    			/* find end of string */
;;;172    			while(*line && !is_blank(*line)){
;;;173    				line++;
;;;174    			}
;;;175    			
;;;176    			if(*line == '\0'){
;;;177    				argv[nargs] = NULL;
;;;178    				return nargs;
;;;179    			}
;;;180    			
;;;181    			*line++ = '\0';
;;;182    	 }
;;;183    	 
;;;184    	 SYS_TRACE(SYS_DEBUG_ON, ("** Too many args (max. %d) **\r\n", CONFIG_SYS_MAXARGS));
;;;185    	 
;;;186    	 return nargs;
;;;187    }
00012e  bd70              POP      {r4-r6,pc}
                  |L1.304|
000130  4628              MOV      r0,r5                 ;169
000132  1c6d              ADDS     r5,r5,#1              ;169
000134  f8464020          STR      r4,[r6,r0,LSL #2]     ;169
000138  e000              B        |L1.316|
                  |L1.314|
00013a  1c64              ADDS     r4,r4,#1              ;173
                  |L1.316|
00013c  7820              LDRB     r0,[r4,#0]            ;172
00013e  b128              CBZ      r0,|L1.332|
000140  7820              LDRB     r0,[r4,#0]            ;172
000142  2820              CMP      r0,#0x20              ;172
000144  d002              BEQ      |L1.332|
000146  7820              LDRB     r0,[r4,#0]            ;172
000148  2809              CMP      r0,#9                 ;172
00014a  d1f6              BNE      |L1.314|
                  |L1.332|
00014c  7820              LDRB     r0,[r4,#0]            ;176
00014e  b920              CBNZ     r0,|L1.346|
000150  2000              MOVS     r0,#0                 ;177
000152  f8460025          STR      r0,[r6,r5,LSL #2]     ;177
000156  4628              MOV      r0,r5                 ;178
000158  e7e9              B        |L1.302|
                  |L1.346|
00015a  2000              MOVS     r0,#0                 ;181
00015c  f8040b01          STRB     r0,[r4],#1            ;181
                  |L1.352|
000160  2d10              CMP      r5,#0x10              ;158
000162  dbd6              BLT      |L1.274|
000164  bf00              NOP                            ;184
000166  2110              MOVS     r1,#0x10              ;184
000168  a042              ADR      r0,|L1.628|
00016a  f7fffffe          BL       s_printf
00016e  bf00              NOP                            ;184
000170  4628              MOV      r0,r5                 ;186
000172  e7dc              B        |L1.302|
;;;188    
                          ENDP

                  osal_run_command PROC
;;;189    cmd_err_t osal_run_command(char *cmd)
000174  b570              PUSH     {r4-r6,lr}
;;;190    {
000176  b092              SUB      sp,sp,#0x48
000178  4604              MOV      r4,r0
;;;191    	 char *argv[CONFIG_SYS_MAXARGS + 1];	/* NULL terminated	*/
;;;192    	 int argc;
;;;193    	 cmd_err_t result;
;;;194    	
;;;195    	 if((argc = parse_line(cmd, argv)) == 0){
00017a  a901              ADD      r1,sp,#4
00017c  4620              MOV      r0,r4
00017e  f7fffffe          BL       parse_line
000182  0005              MOVS     r5,r0
000184  d107              BNE      |L1.406|
;;;196    		 SYS_TRACE(SYS_DEBUG_ON, ("no command at all\r\n"));
000186  bf00              NOP      
000188  a042              ADR      r0,|L1.660|
00018a  f7fffffe          BL       s_printf
00018e  bf00              NOP      
;;;197    		 return CMD_UNKNOWN;
000190  2001              MOVS     r0,#1
                  |L1.402|
;;;198    	 }
;;;199    	 
;;;200    	 result = cmd_process(argc, argv);
;;;201       
;;;202    	 return result;
;;;203    }
000192  b012              ADD      sp,sp,#0x48
000194  bd70              POP      {r4-r6,pc}
                  |L1.406|
000196  a901              ADD      r1,sp,#4              ;200
000198  4628              MOV      r0,r5                 ;200
00019a  f7fffffe          BL       cmd_process
00019e  4606              MOV      r6,r0                 ;200
0001a0  4630              MOV      r0,r6                 ;202
0001a2  e7f6              B        |L1.402|
;;;204    
                          ENDP

                  |L1.420|
                          DCD      ||Load$$INIT_SECTION$$Base||
                  |L1.424|
                          DCD      ||Load$$INIT_SECTION$$Length||
                  |L1.428|
0001ac  0d0a2d2d          DCB      "\r\n-------------CMD List Table------------------\r\n",0
0001b0  2d2d2d2d
0001b4  2d2d2d2d
0001b8  2d2d2d43
0001bc  4d44204c
0001c0  69737420
0001c4  5461626c
0001c8  652d2d2d
0001cc  2d2d2d2d
0001d0  2d2d2d2d
0001d4  2d2d2d2d
0001d8  2d2d2d0d
0001dc  0a00    
0001de  00                DCB      0
0001df  00                DCB      0
                  |L1.480|
0001e0  25642e25          DCB      "%d.%s          -%s\r\n",0
0001e4  73202020
0001e8  20202020
0001ec  2020202d
0001f0  25730d0a
0001f4  00      
0001f5  00                DCB      0
0001f6  00                DCB      0
0001f7  00                DCB      0
                  |L1.504|
0001f8  0d0a2d2d          DCB      "\r\n----------------------------------------------\r\n",0
0001fc  2d2d2d2d
000200  2d2d2d2d
000204  2d2d2d2d
000208  2d2d2d2d
00020c  2d2d2d2d
000210  2d2d2d2d
000214  2d2d2d2d
000218  2d2d2d2d
00021c  2d2d2d2d
000220  2d2d2d2d
000224  2d2d2d2d
000228  0d0a00  
00022b  00                DCB      0
                  |L1.556|
00022c  68656c70          DCB      "help",0
000230  00      
000231  00                DCB      0
000232  00                DCB      0
000233  00                DCB      0
                  |L1.564|
000234  636d645f          DCB      "cmd_process:\r\nUnknown cmd '%s'\r\n",0
000238  70726f63
00023c  6573733a
000240  0d0a556e
000244  6b6e6f77
000248  6e20636d
00024c  64202725
000250  73270d0a
000254  00      
000255  00                DCB      0
000256  00                DCB      0
000257  00                DCB      0
                  |L1.600|
000258  636d645f          DCB      "cmd_process:Too many argv\r\n",0
00025c  70726f63
000260  6573733a
000264  546f6f20
000268  6d616e79
00026c  20617267
000270  760d0a00
                  |L1.628|
000274  2a2a2054          DCB      "** Too many args (max. %d) **\r\n",0
000278  6f6f206d
00027c  616e7920
000280  61726773
000284  20286d61
000288  782e2025
00028c  6429202a
000290  2a0d0a00
                  |L1.660|
000294  6e6f2063          DCB      "no command at all\r\n",0
000298  6f6d6d61
00029c  6e642061
0002a0  7420616c
0002a4  6c0d0a00

                          AREA ||.conststrlit||, DATA, READONLY, ALIGN=0

000000  68656c70          DCB      0x68,0x65,0x6c,0x70
000004  006c6973          DCB      0x00,0x6c,0x69,0x73
000008  74206375          DCB      0x74,0x20,0x63,0x75
00000c  7272656e          DCB      0x72,0x72,0x65,0x6e
000010  74207375          DCB      0x74,0x20,0x73,0x75
000014  70706f72          DCB      0x70,0x70,0x6f,0x72
000018  74656420          DCB      0x74,0x65,0x64,0x20
00001c  434d4400          DCB      0x43,0x4d,0x44,0x00
000020  7072696e          DCB      0x70,0x72,0x69,0x6e
000024  74456e76          DCB      0x74,0x45,0x6e,0x76
000028  00707269          DCB      0x00,0x70,0x72,0x69
00002c  6e742061          DCB      0x6e,0x74,0x20,0x61
000030  6c6c2074          DCB      0x6c,0x6c,0x20,0x74
000034  68652065          DCB      0x68,0x65,0x20,0x65
000038  6e766972          DCB      0x6e,0x76,0x69,0x72
00003c  6f6e6d65          DCB      0x6f,0x6e,0x6d,0x65
000040  6e742076          DCB      0x6e,0x74,0x20,0x76
000044  61726962          DCB      0x61,0x72,0x69,0x62
000048  6c657320          DCB      0x6c,0x65,0x73,0x20
00004c  696e2045          DCB      0x69,0x6e,0x20,0x45
000050  6e762073          DCB      0x6e,0x76,0x20,0x73
000054  79737465          DCB      0x79,0x73,0x74,0x65
000058  6d007365          DCB      0x6d,0x00,0x73,0x65
00005c  74456e76          DCB      0x74,0x45,0x6e,0x76
000060  00736574          DCB      0x00,0x73,0x65,0x74
000064  20616e20          DCB      0x20,0x61,0x6e,0x20
000068  656e7620          DCB      0x65,0x6e,0x76,0x20
00006c  76616c75          DCB      0x76,0x61,0x6c,0x75
000070  65006765          DCB      0x65,0x00,0x67,0x65
000074  74456e76          DCB      0x74,0x45,0x6e,0x76
000078  00676574          DCB      0x00,0x67,0x65,0x74
00007c  20656e76          DCB      0x20,0x65,0x6e,0x76
000080  2076616c          DCB      0x20,0x76,0x61,0x6c
000084  75652062          DCB      0x75,0x65,0x20,0x62
000088  79207468          DCB      0x79,0x20,0x74,0x68
00008c  65206b65          DCB      0x65,0x20,0x6b,0x65
000090  79007361          DCB      0x79,0x00,0x73,0x61
000094  7665456e          DCB      0x76,0x65,0x45,0x6e
000098  76007361          DCB      0x76,0x00,0x73,0x61
00009c  76652061          DCB      0x76,0x65,0x20,0x61
0000a0  6c6c2074          DCB      0x6c,0x6c,0x20,0x74
0000a4  68652065          DCB      0x68,0x65,0x20,0x65
0000a8  6e766972          DCB      0x6e,0x76,0x69,0x72
0000ac  6f6e6d65          DCB      0x6f,0x6e,0x6d,0x65
0000b0  6e742076          DCB      0x6e,0x74,0x20,0x76
0000b4  61726962          DCB      0x61,0x72,0x69,0x62
0000b8  616c6573          DCB      0x61,0x6c,0x65,0x73
0000bc  2066726f          DCB      0x20,0x66,0x72,0x6f
0000c0  6d205241          DCB      0x6d,0x20,0x52,0x41
0000c4  4d20746f          DCB      0x4d,0x20,0x74,0x6f
0000c8  20466c61          DCB      0x20,0x46,0x6c,0x61
0000cc  736800            DCB      0x73,0x68,0x00

                          AREA INIT_CMD, DATA, READONLY, ALIGN=2

                  __init_cmd_help
                  ||__tagsym$$used||
                          DCD      ||.conststrlit||
                          DCD      0x00000001
                          DCD      ||fn1||
                          DCD      ||.conststrlit||+0x5
                  __init_cmd_printEnv
                  |symbol_number.22|
                          DCD      ||.conststrlit||+0x20
                          DCD      0x00000001
                          DCD      ||fn2||
                          DCD      ||.conststrlit||+0x29
                  __init_cmd_setEnv
                  |symbol_number.23|
                          DCD      ||.conststrlit||+0x5a
                          DCD      0x00000003
                          DCD      ||fn3||
                          DCD      ||.conststrlit||+0x61
                  __init_cmd_getEnv
                  |symbol_number.24|
                          DCD      ||.conststrlit||+0x72
                          DCD      0x00000002
                          DCD      ||fn4||
                          DCD      ||.conststrlit||+0x79
                  __init_cmd_saveEnv
                  |symbol_number.25|
                          DCD      ||.conststrlit||+0x92
                          DCD      0x00000001
                          DCD      ||fn5||
                          DCD      ||.conststrlit||+0x9a
