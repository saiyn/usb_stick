; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\build\main.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\main.d --cpu=Cortex-M4.fp --apcs=interwork -O0 -I.\FreeRTOS\include -I.\inc -I.\startup -I.\driverlib -I.\Application -I.\FreeRTOS\portable -I.\Task -I.\driver -I.\usblib -ID:\Keil\ARM\RV31\INC -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\Inc\TI\TM4C129 -Drvmdk -DPART_TM4C1290NCZAD -DRTOS_FREERTOS -DTARGET_IS_SNOWFLAKE_RA0 -DTM4C1290NCZAD --omf_browse=.\build\main.crf Application\main.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  vApplicationStackOverflowHook PROC
;;;20     
;;;21     void vApplicationStackOverflowHook( xTaskHandle *pxTask, signed portCHAR *pcTaskName )
000000  4770              BX       lr
;;;22     {
;;;23     	  
;;;24     }
;;;25     
                          ENDP

                  vApplicationMallocFailedHook PROC
;;;26     void vApplicationMallocFailedHook(void)
000002  4770              BX       lr
;;;27     {
;;;28     	   
;;;29     }
;;;30     
                          ENDP

                  print_version PROC
;;;53     
;;;54     static void print_version(const char *version)
000004  b510              PUSH     {r4,lr}
;;;55     {
000006  4604              MOV      r4,r0
;;;56     	s_printf("\r\n***************************************************\r\n");
000008  a02f              ADR      r0,|L1.200|
00000a  f7fffffe          BL       s_printf
;;;57     	s_printf("*      NAD C358\r\n");
00000e  a03c              ADR      r0,|L1.256|
000010  f7fffffe          BL       s_printf
;;;58     	s_printf("*      version:%s\r\n",version);
000014  4621              MOV      r1,r4
000016  a03f              ADR      r0,|L1.276|
000018  f7fffffe          BL       s_printf
;;;59     	s_printf("*      Created: %s %s \r\n", __DATE__, __TIME__);
00001c  a242              ADR      r2,|L1.296|
00001e  a145              ADR      r1,|L1.308|
000020  a047              ADR      r0,|L1.320|
000022  f7fffffe          BL       s_printf
;;;60     	s_printf("***************************************************\r\n");
000026  a04d              ADR      r0,|L1.348|
000028  f7fffffe          BL       s_printf
;;;61     }
00002c  bd10              POP      {r4,pc}
;;;62     
                          ENDP

                  hal_init PROC
;;;44     
;;;45     static void hal_init(void)
00002e  b510              PUSH     {r4,lr}
;;;46     {
;;;47     	 gSysClock = SysCtlClockFreqSet((SYSCTL_XTAL_25MHZ |SYSCTL_OSC_MAIN |SYSCTL_USE_PLL |SYSCTL_CFG_VCO_480), 120000000); 
000030  4958              LDR      r1,|L1.404|
000032  4859              LDR      r0,|L1.408|
000034  f7fffffe          BL       SysCtlClockFreqSet
000038  4958              LDR      r1,|L1.412|
00003a  6008              STR      r0,[r1,#0]  ; gSysClock
;;;48     	 bsp_gpio_init();
00003c  f7fffffe          BL       bsp_gpio_init
;;;49     	 bsp_uart_init();
000040  f7fffffe          BL       bsp_uart_init
;;;50     	
;;;51     }
000044  bd10              POP      {r4,pc}
;;;52     
                          ENDP

                  main PROC
;;;31     
;;;32     int main(void)
000046  b51f              PUSH     {r0-r4,lr}
;;;33     {
;;;34     	hal_init();
000048  f7fffffe          BL       hal_init
;;;35     	print_version(version);
00004c  4854              LDR      r0,|L1.416|
00004e  6800              LDR      r0,[r0,#0]  ; version
000050  f7fffffe          BL       print_version
;;;36       xTaskCreate(console_task,(const signed char *)"Console", (configMINIMAL_STACK_SIZE*2), NULL, 2, NULL);
000054  2000              MOVS     r0,#0
000056  2302              MOVS     r3,#2
000058  e9cd3000          STRD     r3,r0,[sp,#0]
00005c  9002              STR      r0,[sp,#8]
00005e  4603              MOV      r3,r0
000060  f44f7280          MOV      r2,#0x100
000064  a14f              ADR      r1,|L1.420|
000066  9003              STR      r0,[sp,#0xc]
000068  4850              LDR      r0,|L1.428|
00006a  f7fffffe          BL       xTaskGenericCreate
;;;37     	xTaskCreate(system_task,(const signed char *)"System", (configMINIMAL_STACK_SIZE*2), NULL, 9, NULL);
00006e  2000              MOVS     r0,#0
000070  2309              MOVS     r3,#9
000072  e9cd3000          STRD     r3,r0,[sp,#0]
000076  9002              STR      r0,[sp,#8]
000078  4603              MOV      r3,r0
00007a  f44f7280          MOV      r2,#0x100
00007e  a14c              ADR      r1,|L1.432|
000080  9003              STR      r0,[sp,#0xc]
000082  484d              LDR      r0,|L1.440|
000084  f7fffffe          BL       xTaskGenericCreate
;;;38     	xTaskCreate(display_task,(const signed char *)"display", (configMINIMAL_STACK_SIZE*2), NULL, 8, NULL);
000088  2000              MOVS     r0,#0
00008a  2308              MOVS     r3,#8
00008c  e9cd3000          STRD     r3,r0,[sp,#0]
000090  9002              STR      r0,[sp,#8]
000092  4603              MOV      r3,r0
000094  f44f7280          MOV      r2,#0x100
000098  a148              ADR      r1,|L1.444|
00009a  9003              STR      r0,[sp,#0xc]
00009c  4849              LDR      r0,|L1.452|
00009e  f7fffffe          BL       xTaskGenericCreate
;;;39     	xTaskCreate(usb_stick_task,(const signed char *)"usb_stick", (configMINIMAL_STACK_SIZE*2), NULL, 7, NULL);
0000a2  2000              MOVS     r0,#0
0000a4  2307              MOVS     r3,#7
0000a6  e9cd3000          STRD     r3,r0,[sp,#0]
0000aa  9002              STR      r0,[sp,#8]
0000ac  4603              MOV      r3,r0
0000ae  f44f7280          MOV      r2,#0x100
0000b2  a145              ADR      r1,|L1.456|
0000b4  9003              STR      r0,[sp,#0xc]
0000b6  4847              LDR      r0,|L1.468|
0000b8  f7fffffe          BL       xTaskGenericCreate
;;;40     	// Start the scheduler
;;;41     	vTaskStartScheduler();
0000bc  f7fffffe          BL       vTaskStartScheduler
;;;42     	return 0;
0000c0  2000              MOVS     r0,#0
;;;43     }
0000c2  b004              ADD      sp,sp,#0x10
0000c4  bd10              POP      {r4,pc}
;;;44     
                          ENDP

0000c6  0000              DCW      0x0000
                  |L1.200|
0000c8  0d0a2a2a          DCB      "\r\n***************************************************"
0000cc  2a2a2a2a
0000d0  2a2a2a2a
0000d4  2a2a2a2a
0000d8  2a2a2a2a
0000dc  2a2a2a2a
0000e0  2a2a2a2a
0000e4  2a2a2a2a
0000e8  2a2a2a2a
0000ec  2a2a2a2a
0000f0  2a2a2a2a
0000f4  2a2a2a2a
0000f8  2a2a2a2a
0000fc  2a      
0000fd  0d0a00            DCB      "\r\n",0
                  |L1.256|
000100  2a202020          DCB      "*      NAD C358\r\n",0
000104  2020204e
000108  41442043
00010c  3335380d
000110  0a00    
000112  00                DCB      0
000113  00                DCB      0
                  |L1.276|
000114  2a202020          DCB      "*      version:%s\r\n",0
000118  20202076
00011c  65727369
000120  6f6e3a25
000124  730d0a00
                  |L1.296|
000128  31313a33          DCB      "11:33:59",0
00012c  333a3539
000130  00      
000131  00                DCB      0
000132  00                DCB      0
000133  00                DCB      0
                  |L1.308|
000134  4f637420          DCB      "Oct 30 2015",0
000138  33302032
00013c  30313500
                  |L1.320|
000140  2a202020          DCB      "*      Created: %s %s \r\n",0
000144  20202043
000148  72656174
00014c  65643a20
000150  25732025
000154  73200d0a
000158  00      
000159  00                DCB      0
00015a  00                DCB      0
00015b  00                DCB      0
                  |L1.348|
00015c  2a2a2a2a          DCB      "***************************************************\r\n"
000160  2a2a2a2a
000164  2a2a2a2a
000168  2a2a2a2a
00016c  2a2a2a2a
000170  2a2a2a2a
000174  2a2a2a2a
000178  2a2a2a2a
00017c  2a2a2a2a
000180  2a2a2a2a
000184  2a2a2a2a
000188  2a2a2a2a
00018c  2a2a2a0d
000190  0a      
000191  00                DCB      0
000192  00                DCB      0
000193  00                DCB      0
                  |L1.404|
                          DCD      0x07270e00
                  |L1.408|
                          DCD      0xf1000680
                  |L1.412|
                          DCD      gSysClock
                  |L1.416|
                          DCD      version
                  |L1.420|
0001a4  436f6e73          DCB      "Console",0
0001a8  6f6c6500
                  |L1.428|
                          DCD      console_task
                  |L1.432|
0001b0  53797374          DCB      "System",0
0001b4  656d00  
0001b7  00                DCB      0
                  |L1.440|
                          DCD      system_task
                  |L1.444|
0001bc  64697370          DCB      "display",0
0001c0  6c617900
                  |L1.452|
                          DCD      display_task
                  |L1.456|
0001c8  7573625f          DCB      "usb_stick",0
0001cc  73746963
0001d0  6b00    
0001d2  00                DCB      0
0001d3  00                DCB      0
                  |L1.468|
                          DCD      usb_stick_task

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=0

000000  76302e30          DCB      "v0.0.1",0
000004  2e3100  

                          AREA ||.data||, DATA, ALIGN=2

                  version
                          DCD      ||.conststring||
                  gSysClock
                          DCD      0x00000000

                  __ARM_use_no_argv EQU 0
